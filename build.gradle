buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
    }
}

plugins {
    id "java"
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.2.51"
    id "edu.sc.seis.launch4j" version "2.4.4"
}

repositories {
    jcenter()
}

mainClassName = "org.s2progger.dataflow.MainKt"

group = "org.s2progger"
version = "2.0"

sourceCompatibility = 1.8

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile "com.github.ajalt:clikt:1.3.0"
    compile "io.github.microutils:kotlin-logging:1.5.4"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "com.github.salomonbrys.kotson:kotson:2.5.0"
    compile "com.h2database:h2:1.4.197"
    compile "com.microsoft.sqlserver:mssql-jdbc:6.4.0.jre8"
    compile "com.zaxxer:HikariCP:3.1.0"
    compile files("libs/ojdbc14.jar")

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes(
                "Main-Class": mainClassName
        )
    }
}

task copyConfig(type: Copy, group: "build", description: "Copys the JSON config files to the build directory") {
    from "config"
    include "*.example.*"

    into "${buildDir}/config"

    rename { filename ->
        filename.replace ".example", ""
    }
}

build.finalizedBy copyConfig

launch4j {
    outputDir = "release"
    mainClassName = project.mainClassName
    headerType = "console"
    bundledJrePath = "jre"
    bundledJre64Bit = true
}

task copyJre(type: Copy, group: "launch4j", description: "Bundles the JRE with the final build") {
    from "$System.env.JAVA_HOME/"
    into "$buildDir/release/jre"
}

task distConfig(type: Copy, group: "launch4j", description: "Copies config files to the distribution folder") {
    from "${buildDir}/config"
    into "${buildDir}/release"
}

createExe.dependsOn build
createExe.mustRunAfter build

createExe.dependsOn copyJre
createExe.dependsOn distConfig

copyJre.shouldRunAfter createExe
distConfig.shouldRunAfter createExe


// Do this before assigning mainClassName as the plugin seems to have a bug in it and needs to be initialized late
apply plugin: 'com.github.johnrengelman.shadow'

